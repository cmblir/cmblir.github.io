<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-06-23T04:21:57+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">성장형 개발자 블로그</title><subtitle>An amazing website.</subtitle><author><name>You Nicholas</name></author><entry><title type="html">[파이썬][Codility_] OddOccurrencesInArray</title><link href="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/OddOccurrencesInArray/" rel="alternate" type="text/html" title="[파이썬][Codility_] OddOccurrencesInArray" /><published>2022-06-23T00:00:00+09:00</published><updated>2022-06-23T00:00:00+09:00</updated><id>http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/OddOccurrencesInArray</id><content type="html" xml:base="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/OddOccurrencesInArray/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;

&lt;p&gt;A non-empty array A consisting of N integers is given. The array contains an odd number of elements, and each element of the array can be paired with another element that has the same value, except for one element that is left unpaired.&lt;/p&gt;

&lt;p&gt;For example, in array A such that:&lt;/p&gt;

&lt;p&gt;A[0] = 9  A[1] = 3  A[2] = 9
  A[3] = 3  A[4] = 9  A[5] = 7
  A[6] = 9
the elements at indexes 0 and 2 have value 9,
the elements at indexes 1 and 3 have value 3,
the elements at indexes 4 and 6 have value 9,
the element at index 5 has value 7 and is unpaired.
Write a function:&lt;/p&gt;

&lt;p&gt;def solution(A)&lt;/p&gt;

&lt;p&gt;that, given an array A consisting of N integers fulfilling the above conditions, returns the value of the unpaired element.&lt;/p&gt;

&lt;p&gt;For example, given array A such that:&lt;/p&gt;

&lt;p&gt;A[0] = 9  A[1] = 3  A[2] = 9
  A[3] = 3  A[4] = 9  A[5] = 7
  A[6] = 9
the function should return 7, as explained in the example above.&lt;/p&gt;

&lt;p&gt;Write an efficient algorithm for the following assumptions:&lt;/p&gt;

&lt;p&gt;N is an odd integer within the range [1..1,000,000];
each element of array A is an integer within the range [1..1,000,000,000];
all but one of the values in A occur an even number of times.
Copyright 2009–2022 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;출처: Codility_, https://app.codility.com/programmers/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;단순 코딩 O(N) or O(Nlog(N))&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/3ee3497ab7d98a79783abfd495e55a2d.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-및-해설&quot;&gt;4. 알고리즘 및 해설&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;해당 문제의 요점은 리스트내 짝을 이루는 값이 있는 지 확인하는 것이다.&lt;/li&gt;
  &lt;li&gt;짝을 이룬다 == 해당 값이 2의 배수이다. 이므로 리스트를 정렬해준다.&lt;/li&gt;
  &lt;li&gt;정렬된 리스트를 반복문을 통해 경우에 따라 값을 출력한다.
    &lt;ul&gt;
      &lt;li&gt;경우 1. 짝수이므로 해당 위치 + 1이 마지막인 경우에는 홀수이므로 출력&lt;/li&gt;
      &lt;li&gt;경우 2. 해당 위치값과 다음 값이 다른 경우에는 해당 위치값이 짝이 없는 것이므로 출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;5-알아두면-좋은-정보&quot;&gt;5. 알아두면 좋은 정보&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;sort()또는 sorted()&lt;/strong&gt; 함수의 경우 버블과 같이 느린 방식이 아닌 최적화된 정렬 알고리즘 방식을 사용하기 때문에 시간복잡도가 O(nlogn)이 된다.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="코딩테스트" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><category term="Codility" /><category term="Lessons" /><summary type="html">Codility OddOccurrencesInArray 문제 풀이</summary></entry><entry><title type="html">[파이썬][Codility_] CyclicRotation</title><link href="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/CyclicRotation/" rel="alternate" type="text/html" title="[파이썬][Codility_] CyclicRotation" /><published>2022-06-23T00:00:00+09:00</published><updated>2022-06-23T00:00:00+09:00</updated><id>http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/CyclicRotation</id><content type="html" xml:base="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/CyclicRotation/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;

&lt;p&gt;An array A consisting of N integers is given. Rotation of the array means that each element is shifted right by one index, and the last element of the array is moved to the first place. For example, the rotation of array A = [3, 8, 9, 7, 6] is [6, 3, 8, 9, 7] (elements are shifted right by one index and 6 is moved to the first place).&lt;/p&gt;

&lt;p&gt;The goal is to rotate array A K times; that is, each element of A will be shifted to the right K times.&lt;/p&gt;

&lt;p&gt;Write a function:&lt;/p&gt;

&lt;p&gt;def solution(A, K)&lt;/p&gt;

&lt;p&gt;that, given an array A consisting of N integers and an integer K, returns the array A rotated K times.&lt;/p&gt;

&lt;p&gt;For example, given&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A = [3, 8, 9, 7, 6]
K = 3 the function should return [9, 7, 6, 3, 8]. Three rotations were made:

[3, 8, 9, 7, 6] -&amp;gt; [6, 3, 8, 9, 7]
[6, 3, 8, 9, 7] -&amp;gt; [7, 6, 3, 8, 9]
[7, 6, 3, 8, 9] -&amp;gt; [9, 7, 6, 3, 8] For another example, given

A = [0, 0, 0]
K = 1 the function should return [0, 0, 0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Given&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A = [1, 2, 3, 4]
K = 4 the function should return [1, 2, 3, 4]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assume that:&lt;/p&gt;

&lt;p&gt;N and K are integers within the range [0..100];
each element of array A is an integer within the range [−1,000..1,000].
In your solution, focus on correctness. The performance of your solution will not be the focus of the assessment.&lt;/p&gt;

&lt;p&gt;Copyright 2009–2022 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;출처: Codility_, https://app.codility.com/programmers/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;덱(deque) O(1)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/ef883c5fa2f2e33ef23bba0c5606a8ae.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-및-해설&quot;&gt;4. 알고리즘 및 해설&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;해당 문제의 경우 리스트내 값을 뒤에서 앞으로 바꿔오는 게 핵심이다.&lt;/li&gt;
  &lt;li&gt;deque를 통해 제일 뒤에 값을 앞에 만들어주고, 제일 뒤에 값을 빼는 형식으로 구현해봤다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;5-파이썬-deque-구현&quot;&gt;5. 파이썬 deque 구현&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 덱 라이브러리
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 덱 형태로 변환
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>You Nicholas</name></author><category term="코딩테스트" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><category term="Codility" /><category term="Lessons" /><summary type="html">Codility CyclicRotation 문제 풀이</summary></entry><entry><title type="html">[파이썬][Codility_] FuryRoad</title><link href="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/FuryRoad/" rel="alternate" type="text/html" title="[파이썬][Codility_] FuryRoad" /><published>2022-06-23T00:00:00+09:00</published><updated>2022-06-23T00:00:00+09:00</updated><id>http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/FuryRoad</id><content type="html" xml:base="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/FuryRoad/">&lt;h2 id=&quot;0-챌린지-소개&quot;&gt;0. 챌린지 소개&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75519839/175105370-bb96a64a-f99d-4138-8810-d788d154689d.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;

&lt;p&gt;You have to be at your work as soon as possible. The road on your route to work may consist of two types of surface: asphalt or sand. To simplify the description, it will be denoted by a string R consisting only of the letters: “A” for an asphalt segment and “S” for a sand segment. All segments represent the same distance. For example, R = “SAAS” describes a road comprising of sand, asphalt, asphalt and sand segments.&lt;/p&gt;

&lt;p&gt;When you go on foot, you need 20 minutes to pass through an asphalt segment and 30 minutes through a sand segment. You also have an electric scooter, which needs 5 minutes to pass through an asphalt segment and 40 minutes through a sand segment.&lt;/p&gt;

&lt;p&gt;You start your journey on the scooter, but at any point you can get off the scooter and go on foot for the rest of the journey. What is the shortest time in which you can get to work?&lt;/p&gt;

&lt;p&gt;Write a function:&lt;/p&gt;

&lt;p&gt;def solution(R)&lt;/p&gt;

&lt;p&gt;that, given a string R of length N, representing the road to work, returns the minimum time that you need to get to work.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Given R = “ASAASS”, your function should return 115. You ride on the scooter over the first four segments (“ASAA”) in 5 + 40 + 5 + 5 = 55 and then you go on foot through “SS” in 30 + 30 = 60. Altogether, your journey will take 55 + 60 = 115.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Given R = “SSA”, the function should return 80. You do not ride on the scooter at all, and you go on foot in 30 + 30 + 20 = 80.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Given R = “SSSSAAA”, the function should return 175. You ride on the scooter all the time in 40 + 40 + 40 + 40 + 5 + 5 + 5 = 175.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Write an efficient algorithm for the following assumptions:&lt;/p&gt;

&lt;p&gt;N is an integer within the range [1..100,000];
string R consists only of the characters “S” and/or “A”.
Copyright 2009–2022 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;출처: Codility_, https://app.codility.com/programmers/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;단순 코딩 O(N)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/626d86140fbd84e219dd45731e965877.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-및-해설&quot;&gt;4. 알고리즘 및 해설&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;문제의 요점은 2가지 이동수단을 통해 움직이는 것이다.
    &lt;ul&gt;
      &lt;li&gt;도보로 이동하는 경우
        &lt;ul&gt;
          &lt;li&gt;아스팔트 20분&lt;/li&gt;
          &lt;li&gt;모래 30분&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;스쿠터로 이동하는 경우
        &lt;ul&gt;
          &lt;li&gt;아스팔트 5분&lt;/li&gt;
          &lt;li&gt;모래 40분&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;스쿠터의 경우 중간에 내리면 더 이상 사용할 수 없다는 점을 이용해서 도보로만 가는 경우를 만들었다.
    &lt;ul&gt;
      &lt;li&gt;이때 아스팔트 A와 모래 S를 숫자로 변환해서 리스트로 넣었다. -&amp;gt; 이는 도보로만 이동한 경우의 총합 시간을 구하기 위해서이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이후 반복문을 통해 스쿠터로 지나가는 모든 경우의 총합 시간을 리스트에 넣는다.
    &lt;ul&gt;
      &lt;li&gt;스쿠터가 해당 위치를 지나갈 때마다 스쿠터로 이동하는 시간으로 변경해준다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;그 중 가장 적게 걸린 시간을 출력한다.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="코딩테스트" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><category term="Codility Challenge" /><summary type="html">Codility FuryRoad 문제 풀이</summary></entry><entry><title type="html">[파이썬][Codility_] BinaryGap</title><link href="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/BinaryGap/" rel="alternate" type="text/html" title="[파이썬][Codility_] BinaryGap" /><published>2022-06-22T00:00:00+09:00</published><updated>2022-06-22T00:00:00+09:00</updated><id>http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/BinaryGap</id><content type="html" xml:base="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/BinaryGap/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;

&lt;p&gt;A binary gap within a positive integer N is any maximal sequence of consecutive zeros that is surrounded by ones at both ends in the binary representation of N.&lt;/p&gt;

&lt;p&gt;For example, number 9 has binary representation 1001 and contains a binary gap of length 2. The number 529 has binary representation 1000010001 and contains two binary gaps: one of length 4 and one of length 3. The number 20 has binary representation 10100 and contains one binary gap of length 1. The number 15 has binary representation 1111 and has no binary gaps. The number 32 has binary representation 100000 and has no binary gaps.&lt;/p&gt;

&lt;p&gt;Write a function:&lt;/p&gt;

&lt;p&gt;def solution(N)&lt;/p&gt;

&lt;p&gt;that, given a positive integer N, returns the length of its longest binary gap. The function should return 0 if N doesn’t contain a binary gap.&lt;/p&gt;

&lt;p&gt;For example, given N = 1041 the function should return 5, because N has binary representation 10000010001 and so its longest binary gap is of length 5. Given N = 32 the function should return 0, because N has binary representation ‘100000’ and thus no binary gaps.&lt;/p&gt;

&lt;p&gt;Write an efficient algorithm for the following assumptions:&lt;/p&gt;

&lt;p&gt;N is an integer within the range [1..2,147,483,647].
Copyright 2009–2022 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;출처: Codility_, https://app.codility.com/programmers/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;단순 코딩 O(1)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/334cd7a9c941c122e1b003be1f21228b.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-및-해설&quot;&gt;4. 알고리즘 및 해설&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;bin() 함수를 통해 해당 문자열을 이진수로 바꿔준다.&lt;/li&gt;
  &lt;li&gt;strip()으로 좌우측 0과 1을 제외해준다.
    &lt;ul&gt;
      &lt;li&gt;해당 문제에서 말하는 바이너리 갭은 110011처럼 숫자 사이에 낀 것을 뜻한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이후 반복되는 수중 가장 길이가 긴 문자열의 길이를 출력한다.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="코딩테스트" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><category term="Codility" /><category term="Lessons" /><summary type="html">Codility BinaryGap 문제 풀이</summary></entry><entry><title type="html">애어른</title><link href="http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%95%A0%EC%96%B4%EB%A5%B8/" rel="alternate" type="text/html" title="애어른" /><published>2022-06-21T00:00:00+09:00</published><updated>2022-06-21T00:00:00+09:00</updated><id>http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%95%A0%EC%96%B4%EB%A5%B8</id><content type="html" xml:base="http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%95%A0%EC%96%B4%EB%A5%B8/">&lt;h2 id=&quot;어제는-누구보다-빠르게-달려갔고-오늘은-누구보다-느리게-걸어간다&quot;&gt;어제는 누구보다 빠르게 달려갔고, 오늘은 누구보다 느리게 걸어간다.&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;어려서부터 독립성도 강하고 모든지 혼자 해결하려고 했다. 부모님 말로는 내가 애기때부터 숫자에 관심이 많아 산수가 빨랐다고 했다. 물건을 살때도 “엄마 이게 저거보다 양도 많은데 훨씬 싸” 하면서 비교하고 거스름돈도 착착 잘 챙겨와서 커서 걱정이 없을거라고 하셨다. 그래서 그런가 걱정을 안하시고 커서 남들보다 뭐든지 앞서가고 빠르게 행동했고, 철도 금방 들었던 것 같다. 주변에서는 마치 어른처럼 행동하고 뭐든지 책임감있게 하려는 모습이 내가 ‘애어른’같다고 하며 하는 행동이 정말 기특하다고 하셨다.&lt;/p&gt;

&lt;h2 id=&quot;내일은-달릴-수-있길-바라며&quot;&gt;내일은 달릴 수 있길 바라며&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
그렇게 자란 내 모습은 아직도 ‘애어른’같다. 책임감이 강하던 그 아이는 이제 어디에도 없는 듯 보인다. 나는 꿈도 있고, 목표가 있는데 그걸 이뤄야하는 책임또한 있다. 남들보다 앞서 나가던 아이는 24살인 지금 그 누구보다 뒤처지고 있다. 그렇게 장학금받으며 잘 다니던 학교도 그만두고 수도권으로 상경한 지 1년째 나는 아직 정체중인 것만 같다. 누구는 꿈을 향해 열정적으로 달려가고 누군가는 오늘을 살기위해 최선을 다한다. 그리고 내일을 바라보며 오늘을 준비한다. 그런데 나는 어제 누구보다 빨리 달렸고 오늘은 멈춰있는 것만 같다.&lt;/p&gt;</content><author><name>You Nicholas</name></author><category term="하루" /><category term="유통기한 하루" /><category term="성장" /><category term="습관" /><summary type="html">하는 행동이 어른같은 아이, 하는 행동이 애같은 어른</summary></entry><entry><title type="html">[파이썬][프로그래머스] 폰켓몬</title><link href="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/1845/" rel="alternate" type="text/html" title="[파이썬][프로그래머스] 폰켓몬" /><published>2022-06-21T00:00:00+09:00</published><updated>2022-06-21T00:00:00+09:00</updated><id>http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/1845</id><content type="html" xml:base="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/1845/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;

&lt;h1 id=&quot;level-1-폰켓몬---1845&quot;&gt;[level 1] 폰켓몬 - 1845&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/1845&quot;&gt;문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;성능-요약&quot;&gt;성능 요약&lt;/h3&gt;

&lt;p&gt;메모리: 10.3 MB, 시간: 0.19 ms&lt;/p&gt;

&lt;h3 id=&quot;구분&quot;&gt;구분&lt;/h3&gt;

&lt;p&gt;코딩테스트 연습 &amp;gt; 찾아라 프로그래밍 마에스터&lt;/p&gt;

&lt;h3 id=&quot;채점결과&quot;&gt;채점결과&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;정확성: 100.0&lt;br /&gt;합계: 100.0 / 100.0&lt;/p&gt;

&lt;h3 id=&quot;문제-설명&quot;&gt;문제 설명&lt;/h3&gt;

&lt;p&gt;당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.&lt;br /&gt;
홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호가 [3번, 1번, 2번, 3번]이라면 이는 3번 폰켓몬 두 마리, 1번 폰켓몬 한 마리, 2번 폰켓몬 한 마리가 있음을 나타냅니다. 이때, 4마리의 폰켓몬 중 2마리를 고르는 방법은 다음과 같이 6가지가 있습니다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;첫 번째(3번), 두 번째(1번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;첫 번째(3번), 세 번째(2번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;첫 번째(3번), 네 번째(3번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;두 번째(1번), 세 번째(2번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;두 번째(1번), 네 번째(3번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;세 번째(2번), 네 번째(3번) 폰켓몬을 선택&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이때, 첫 번째(3번) 폰켓몬과 네 번째(3번) 폰켓몬을 선택하는 방법은 한 종류(3번 폰켓몬 두 마리)의 폰켓몬만 가질 수 있지만, 다른 방법들은 모두 두 종류의 폰켓몬을 가질 수 있습니다. 따라서 위 예시에서 가질 수 있는 폰켓몬 종류 수의 최댓값은 2가 됩니다.&lt;br /&gt;
당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.&lt;/p&gt;

&lt;h5&gt;제한사항&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;nums는 폰켓몬의 종류 번호가 담긴 1차원 배열입니다.&lt;/li&gt;
&lt;li&gt;nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.&lt;/li&gt;
&lt;li&gt;폰켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.&lt;/li&gt;
&lt;li&gt;가장 많은 종류의 폰켓몬을 선택하는 방법이 여러 가지인 경우에도, 선택할 수 있는 폰켓몬 종류 개수의 최댓값 하나만 return 하면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5&gt;입출력 예&lt;/h5&gt;
&lt;table class=&quot;table&quot;&gt;
        &lt;thead&gt;&lt;tr&gt;
&lt;th&gt;nums&lt;/th&gt;
&lt;th&gt;result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
        &lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;[3,1,2,3]&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[3,3,3,2,2,4]&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[3,3,3,2,2,2]&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
      &lt;/table&gt;
&lt;h5&gt;입출력 예 설명&lt;/h5&gt;

&lt;p&gt;입출력 예 #1&lt;br /&gt;
문제의 예시와 같습니다.&lt;/p&gt;

&lt;p&gt;입출력 예 #2&lt;br /&gt;
6마리의 폰켓몬이 있으므로, 3마리의 폰켓몬을 골라야 합니다.&lt;br /&gt;
가장 많은 종류의 폰켓몬을 고르기 위해서는 3번 폰켓몬 한 마리, 2번 폰켓몬 한 마리, 4번 폰켓몬 한 마리를 고르면 되며, 따라서 3을 return 합니다.&lt;/p&gt;

&lt;p&gt;입출력 예 #3&lt;br /&gt;
6마리의 폰켓몬이 있으므로, 3마리의 폰켓몬을 골라야 합니다.&lt;br /&gt;
가장 많은 종류의 폰켓몬을 고르기 위해서는 3번 폰켓몬 한 마리와 2번 폰켓몬 두 마리를 고르거나, 혹은 3번 폰켓몬 두 마리와 2번 폰켓몬 한 마리를 고르면 됩니다. 따라서 최대 고를 수 있는 폰켓몬 종류의 수는 2입니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;단순 코딩 O(N)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/b954c7fddb54276a3395eb98cbe00ea9.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-및-해설&quot;&gt;4. 알고리즘 및 해설&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;총 폰켓몬 종류를 구하는 문제로 가지고 있는 폰켓몬의 N/2 숫자만큼 선택이 가능하다.&lt;/li&gt;
  &lt;li&gt;그 중 나올 수 있는 경우의 수를 구하는 문제이다.&lt;/li&gt;
  &lt;li&gt;문제를 더 간단하게 정리하자면, [3, 1, 2, 3] 총 4마리의 폰켓몬이 있다.
    &lt;ul&gt;
      &lt;li&gt;폰켓몬은 4마리이므로 N/2는 2마리까지 선택이 가능하다.&lt;/li&gt;
      &lt;li&gt;경우의 수는 [3, 1], [3, 2], [3, 3], [1, 2], [1, 3], [2, 3]&lt;/li&gt;
      &lt;li&gt;이 중 중복을 제외한 4가지 [1, 3], [2, 3], [3, 3], [1, 2]&lt;/li&gt;
      &lt;li&gt;서로 다른 2종류의 폰켓몬을 고르는 경우 1가지, 같은 종류의 폰켓몬을 고르는 경우 1가지&lt;/li&gt;
      &lt;li&gt;총 2가지이므로 답은 2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;내가 선택한 방법은 중복을 제거한 반복문이 돌아가는 동안, 한번에 선택할 수 있는 폰켓몬 경우의 수를 세는 것이다.
    &lt;ul&gt;
      &lt;li&gt;반복문이 도는 동안 중복을 제외한 [3, 1, 2], 가질 수 있는 폰켓몬 2마리&lt;/li&gt;
      &lt;li&gt;총 3번의 반복을 하는 동안 가질 수 있는 폰켓몬 종류 번호의 개수보다 크다면 + 1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="코딩테스트" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><category term="프로그래머스" /><category term="Level_1" /><summary type="html">프로그래머스 폰켓몬 문제 풀이</summary></entry><entry><title type="html">움직여라</title><link href="http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%9B%80%EC%A7%81%EC%97%AC%EB%9D%BC/" rel="alternate" type="text/html" title="움직여라" /><published>2022-06-20T00:00:00+09:00</published><updated>2022-06-20T00:00:00+09:00</updated><id>http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%9B%80%EC%A7%81%EC%97%AC%EB%9D%BC</id><content type="html" xml:base="http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%9B%80%EC%A7%81%EC%97%AC%EB%9D%BC/">&lt;h2 id=&quot;따뜻한-햇살-아래-포근한-침대&quot;&gt;따뜻한 햇살 아래 포근한 침대&lt;/h2&gt;

&lt;p&gt;요새 너무 게을러버린 나는 9시에 일어난다. 그리고 오늘 해야할 일을 간략하게 적고 하다가 금방 낮잠에 들고 만다. 따뜻한 햇살이랑 누구도 건들지 않는 평일의 침대는 그 누구도 뿌리치기 힘든 유혹이다. 그런 유혹에 넘어가길 벌써 며칠째이다. 아침을 바꾸고 싶다는 마음에 동기부여영상을 보고 짐퀵이라는 브레인 코치의 말을 들으며 적어봤다.&lt;/p&gt;

&lt;h3 id=&quot;의식을-가지고-아침을-시작해라&quot;&gt;의식을 가지고 아침을 시작해라&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이것을 리추얼(Ritual)이라고 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;리추얼하는 방법을 간단하게 12가지로 적어봤다.&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;꿈을 기억해라
    &lt;ul&gt;
      &lt;li&gt;어떤 사안을 처리하고 통합해서 문제 해결을 한다. 낮시간동안 내가 할 것에 대해 잠재의식을 활용해야한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;침대를 정리해라
    &lt;ul&gt;
      &lt;li&gt;긍정적인 탄력을 만드는 것으로 올바르게 만드는 과학적 탄력이고 확실하게 해낼 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;물과 보충제를 먹어라
    &lt;ul&gt;
      &lt;li&gt;우리는 자는 동안 물을 먹지 않으므로 아침에 물을 먹어야된다. 보충제도 마찬가지로 우리의 몸에 영양분을 넣어줘야 오늘 내가 잘 생활하기 좋은 상태로 만들어야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;호흡해라
    &lt;ul&gt;
      &lt;li&gt;명상해라 하루를 시작할 때 마음을 정돈하는 것도 하나의 좋은 습관중 하나이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;격렬하게 움직여라
    &lt;ul&gt;
      &lt;li&gt;명상으로 뇌를 깨웠다면 몸을 깨워줘야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;콜드 테라피 찬물 샤워
    &lt;ul&gt;
      &lt;li&gt;신경계를 리셋하고 염증에 좋다고 한다. &lt;strong&gt;그냥 아침에 정신차리기에는 이게 직방인 것 같다.&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;차를 마시면서 일기를 써라
    &lt;ul&gt;
      &lt;li&gt;기록하고 일기를 써라 오늘 하루의 원동력이 되어줄거다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;To do list
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;세 가지 업무와 세 가지 개인적인 것을 작성해라&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;우리 모두는 계속 진행중이고 그것을 해야한다.&lt;/li&gt;
      &lt;li&gt;성취하고 싶은 거 나는 이겨낼 것이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;To feel list
    &lt;ul&gt;
      &lt;li&gt;나의 감정을 관리하고 설계하고 하루종일 그것을 느껴라&lt;/li&gt;
      &lt;li&gt;내 감정이 충동적으로 발생하는 것을 원치 않는다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;To be list
    &lt;ul&gt;
      &lt;li&gt;그 날 내가 되고 싶은 것을 적어라&lt;/li&gt;
      &lt;li&gt;선생님이든 학자이든 개발자이든 내가 되고 싶은 모든 것을 적어라 그건 그냥 상투적인 것이 아니라.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;우리는 인간 행동이 아니라 인간 존재이다. 오늘은 무슨 존재가 되고 싶은가&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;독서를 해라
    &lt;ul&gt;
      &lt;li&gt;‘일주일에 책 한권 읽기’와 같은 목표가 생긴다면 시간 계획이 필요하고 해야할 것이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하루를 시작해라
    &lt;ul&gt;
      &lt;li&gt;오늘도 하루라는 금을 쓰러 가보자!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="하루" /><category term="유통기한 하루" /><category term="성장" /><category term="습관" /><summary type="html">아침을 이기면 하루를 이길 수 있다.</summary></entry><entry><title type="html">기계식 키보드란</title><link href="http://localhost:4000/%ED%82%A4%EB%B3%B4%EB%93%9C/%EA%B8%B0%EA%B3%84%EC%8B%9D%ED%82%A4%EB%B3%B4%EB%93%9C%EB%9E%80/" rel="alternate" type="text/html" title="기계식 키보드란" /><published>2022-06-17T00:00:00+09:00</published><updated>2022-06-17T00:00:00+09:00</updated><id>http://localhost:4000/%ED%82%A4%EB%B3%B4%EB%93%9C/%EA%B8%B0%EA%B3%84%EC%8B%9D%ED%82%A4%EB%B3%B4%EB%93%9C%EB%9E%80</id><content type="html" xml:base="http://localhost:4000/%ED%82%A4%EB%B3%B4%EB%93%9C/%EA%B8%B0%EA%B3%84%EC%8B%9D%ED%82%A4%EB%B3%B4%EB%93%9C%EB%9E%80/">&lt;h2 id=&quot;기계식-키보드란&quot;&gt;기계식 키보드란?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75519839/174333187-79df3216-aaeb-4a82-9065-89d81e4c9011.jpg&quot; alt=&quot;IMG_8393&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이 사진은 내 기계식 키보드이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기계식-키보드가-되기-위한-조건&quot;&gt;기계식 키보드가 되기 위한 조건&lt;/h3&gt;

&lt;p&gt;우리가 흔히 말하는 ‘기계식’ 키보드는 3가지 조건을 달성하면 우리가 흔히 아는 기계식이 된다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;축전식이 아닌 것&lt;/li&gt;
  &lt;li&gt;분리되어 있던 금속 접점이 서로 접촉하며 키가 입력되는 방식일 것&lt;/li&gt;
  &lt;li&gt;금속 접점이 분리할 수 있는 스위치 내부에 존재할 것&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;좀 더 쉽게 설명하자면,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;축전량의 변화가 키를 누르는 지를 감지하는 방식 -&amp;gt; 용수철같은 전도체가 축전센서에 신호를 주는 방식이 아닌 것&lt;/li&gt;
  &lt;li&gt;키보드 안에 스위치를 낄 수 있는 자리가 있어서 그것을 접촉시켜 키가 입력되어야 하는 방식&lt;/li&gt;
  &lt;li&gt;스위치 안에 접점부가 있을 것&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75519839/174334588-8316ce01-3b9a-4a16-a203-3f98b4b11572.jpg&quot; alt=&quot;IMG_8447&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위의 사진이 바로 스위치라는 것이다. 해당 스위치를 눌렀을 때 우리가 흔히 말하는 땅을 치면서 접점부를 누르게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;작동-방식으로-조건-간략-설명&quot;&gt;작동 방식으로 조건 간략 설명&lt;/h3&gt;

&lt;p&gt;위의 조건에 나와있는 것을 반대로 돌아가면 정확하게 작동 방식이 이해가 된다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;스위치 내부의 접점부를 누른다. (스위치를 누르면 안에 스템이 내부의 스프링을 누르면서 접점부를 누르게 된다.)&lt;/li&gt;
  &lt;li&gt;접점부를 누름과 동시에 해당 스위치의 금속 접점과 PCB(키보드 메인보드 느낌)의 접점이 신호를 받으면서 해당 키가 눌렸다고 전달한다.&lt;/li&gt;
  &lt;li&gt;이러한 방식은 축전식이 아닌 기계식이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Pc0p70nKb3M&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;위의 영상은 제 개인 유튜브로 간략하게 찍어봤습니다. 위에 나온 스위치를 키보드에 넣었을 때 나오는 소리입니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>You Nicholas</name></author><category term="키보드" /><category term="키보드" /><summary type="html">멤브레인 키보드의 차이</summary></entry><entry><title type="html">노션의 글을 옮기며</title><link href="http://localhost:4000/%EC%9D%BC%EC%83%81/%EB%85%B8%EC%85%98%EC%9D%98-%EA%B8%80%EB%93%A4%EC%9D%84-%EC%98%AE%EA%B8%B0%EB%A9%B0/" rel="alternate" type="text/html" title="노션의 글을 옮기며" /><published>2022-06-16T00:00:00+09:00</published><updated>2022-06-16T00:00:00+09:00</updated><id>http://localhost:4000/%EC%9D%BC%EC%83%81/%EB%85%B8%EC%85%98%EC%9D%98%20%EA%B8%80%EB%93%A4%EC%9D%84%20%EC%98%AE%EA%B8%B0%EB%A9%B0</id><content type="html" xml:base="http://localhost:4000/%EC%9D%BC%EC%83%81/%EB%85%B8%EC%85%98%EC%9D%98-%EA%B8%80%EB%93%A4%EC%9D%84-%EC%98%AE%EA%B8%B0%EB%A9%B0/">&lt;h2 id=&quot;혼자만의-공부-공간-&quot;&gt;혼자만의 공부 공간 📜&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75519839/174033997-3bfd6402-63fc-45ad-b727-48efa7c97cef.png&quot; alt=&quot;스크린샷 2022-06-16 17 59 45&quot; /&gt;&lt;/p&gt;

&lt;p&gt;혼자 공부하는 공간이라 나만 알아볼 수 있게 정리해놨다. 👀&lt;/p&gt;

&lt;p&gt;위에 보이는 것 이외에도 페이지가 너무 많아서 조만간 더 정리할 생각이다 (아이디어 노트같이 카테고리를 정하기 애매한 것들이 많다 ㅠ)&lt;/p&gt;

&lt;p&gt;나는 처음 코딩을 배울 때 아는 지인으로부터 공부한 걸 기록하는 습관이 중요하다고 배웠다. 중고등학교 시절부터 무언가 배운 것이 있으면 적지 않고 머리로만 암기해서 풀었다. 그나마 교과서에 끄적이는 게 전부였기에 처음에 노션을 접하고 하나하나 적다보니 지금은 일단 적고 보는 편이다.&lt;/p&gt;

&lt;p&gt;그런 나에게 노션은 혁명이였다. 적기도 수월했고 그리고 기록이 버릇으로 남다보니 핸드폰을 들고다니며 생각나는 아이디어가 있으면 일단 적고 본다. 적으니까 기억에 남아서 나중에는 잘 까먹지도 않는다.&lt;/p&gt;

&lt;h2 id=&quot;엄청난-메리트-&quot;&gt;엄청난 메리트 ⁉&lt;/h2&gt;

&lt;p&gt;아무래도 정리를 하다보니 문제를 풀다가 막히는 부분이 있다면 일단 내 노션부터 키고 본다. 예전에 마주했던 문제가 있다면 구글에서 찾고 비슷한 문제다 싶으면 들어가서 또 찾고 비교해야하는 수월을 훨씬 줄일 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;디메리트-&quot;&gt;디메리트 💢&lt;/h2&gt;

&lt;p&gt;문제가 생기면 일단 기록하고 내가 본 적 있는 문제다 싶으면 노션을 켰다. 그래서 장시간 문제를 해결하는 노력을 하지 않게 된다. 디메리트라고 하기가 뭐하긴하지만 유연하게 문제를 해결하기 위해서는 가끔은 고지식하게 하나를 물고 늘어질 필요도 있다. 하지만 요즘 같이 바쁘다 바빠 현대사회에서 시간은 금이기에 ‘어? 이 문제 어디서 본 적 있는데? 이 코드 쓴 적 있는데?’ 하면 일단 내가 쓴거부터 본다.&lt;/p&gt;

&lt;h3 id=&quot;고치는-중이야&quot;&gt;고치는 중이야..&lt;/h3&gt;

&lt;p&gt;첫 면접날에 라이브 코딩을 본 적이 있다고 했다. 궁금하다면 &lt;strong&gt;&lt;a href=&quot;&amp;quot;https://godhin.github.io/%EC%9D%BC%EC%83%81/%EC%B2%AB-%EB%A9%B4%EC%A0%91/&amp;quot;&quot;&gt;처음으로 면접을 보았다&lt;/a&gt;&lt;/strong&gt; 가서 후기를 보길 바란다. 정말 간단한 문제였는데 못 풀었다. 그때 그 경험이 좋았던게 화이트보드를 통한 라이브코딩 그래서 나도 문제 풀때 꼭 옆에 화이트보드를 끼고 일단 머리 굴려서 풀어보고, 그리고 손 굴려서 풀어본다. 그러니까 이상하게 머리에 더 오래 남는 느낌이다. &lt;em&gt;마지막으로 블로그에 글 까지 쓰면 완벽하다.&lt;/em&gt;&lt;/p&gt;</content><author><name>You Nicholas</name></author><category term="일상" /><category term="일상" /><category term="면접" /><category term="라이브코딩" /><summary type="html">바쁜 와중 이루어진 나의 블로그 이사</summary></entry><entry><title type="html">하루라는 금</title><link href="http://localhost:4000/%ED%95%98%EB%A3%A8/%ED%95%98%EB%A3%A8%EC%9D%98-%EC%8B%9C%EC%9E%91/" rel="alternate" type="text/html" title="하루라는 금" /><published>2022-06-16T00:00:00+09:00</published><updated>2022-06-16T00:00:00+09:00</updated><id>http://localhost:4000/%ED%95%98%EB%A3%A8/%ED%95%98%EB%A3%A8%EC%9D%98%20%EC%8B%9C%EC%9E%91</id><content type="html" xml:base="http://localhost:4000/%ED%95%98%EB%A3%A8/%ED%95%98%EB%A3%A8%EC%9D%98-%EC%8B%9C%EC%9E%91/">&lt;h2 id=&quot;돌아보면서&quot;&gt;돌아보면서&lt;/h2&gt;
&lt;p&gt;가끔 그런 생각에 빠져드는 날이 있다. ‘오늘 아무것도 하기 싫다’, ‘내일부터 하지 뭐’라는 생각이 나의 머리를 지배하는 날들
그런 날들이 나에게 계속해서 쌓여만 가던 와중 블로그를 시작하게 되었고, 책을 읽게 되고 거울속의 내 모습을 긴 시간동안 바라보았다.
‘과연 나는 내가 어릴 적 꿈꿔오던 지금 나이의 모습이랑 같은가’ 머릿속에 그런 문장이 지나가고 나는 되돌아보게 되었다.&lt;/p&gt;

&lt;h2 id=&quot;만약에-게임&quot;&gt;만약에 게임&lt;/h2&gt;
&lt;p&gt;만약에 ~~라면?? 만약에 말이야~ 라는 말을 입에 달고 산 적이 있다. 그런 내가 나의 모습을 본 뒤로 나에게 질문하는 만약에 게임이 있다. &lt;em&gt;‘만약에 너한테 내일 사라지는 금을 준다면 어떻게 할래?’&lt;/em&gt; 우리는 하루라는 금과도 같은 시간을 매일 버리고 있는 것 같다. 누군가는 오늘이 마지막날일 수도 있다 누군가는 내일 하루라도 더 살기위해 고통을 참고 살아간다 누군가는 어제를 후회하며 오늘을 산다. 시간은 금과 같다 우리는 매일 금같은 하루라는 시간을 가지게 되는데 이 금을 어떻게 할것인가는 나의 선택에 달린 것 같다.&lt;/p&gt;</content><author><name>You Nicholas</name></author><category term="하루" /><category term="유통기한 하루" /><category term="성장" /><category term="습관" /><summary type="html">만약에 너한테 내일 사라지는 금을 준다면 어떻게 할래?</summary></entry></feed>