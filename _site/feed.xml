<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-06-21T00:46:01+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">성장형 개발자 블로그</title><subtitle>An amazing website.</subtitle><author><name>You Nicholas</name></author><entry><title type="html">[파이썬][프로그래머스] 폰켓몬</title><link href="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%ED%8F%B0%EC%BC%93%EB%AA%AC/" rel="alternate" type="text/html" title="[파이썬][프로그래머스] 폰켓몬" /><published>2022-06-21T00:00:00+09:00</published><updated>2022-06-21T00:00:00+09:00</updated><id>http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%ED%8F%B0%EC%BC%93%EB%AA%AC</id><content type="html" xml:base="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%ED%8F%B0%EC%BC%93%EB%AA%AC/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;

&lt;h1 id=&quot;level-1-폰켓몬---1845&quot;&gt;[level 1] 폰켓몬 - 1845&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/1845&quot;&gt;문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;성능-요약&quot;&gt;성능 요약&lt;/h3&gt;

&lt;p&gt;메모리: 10.3 MB, 시간: 0.19 ms&lt;/p&gt;

&lt;h3 id=&quot;구분&quot;&gt;구분&lt;/h3&gt;

&lt;p&gt;코딩테스트 연습 &amp;gt; 찾아라 프로그래밍 마에스터&lt;/p&gt;

&lt;h3 id=&quot;채점결과&quot;&gt;채점결과&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;정확성: 100.0&lt;br /&gt;합계: 100.0 / 100.0&lt;/p&gt;

&lt;h3 id=&quot;문제-설명&quot;&gt;문제 설명&lt;/h3&gt;

&lt;p&gt;당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.&lt;br /&gt;
홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호가 [3번, 1번, 2번, 3번]이라면 이는 3번 폰켓몬 두 마리, 1번 폰켓몬 한 마리, 2번 폰켓몬 한 마리가 있음을 나타냅니다. 이때, 4마리의 폰켓몬 중 2마리를 고르는 방법은 다음과 같이 6가지가 있습니다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;첫 번째(3번), 두 번째(1번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;첫 번째(3번), 세 번째(2번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;첫 번째(3번), 네 번째(3번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;두 번째(1번), 세 번째(2번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;두 번째(1번), 네 번째(3번) 폰켓몬을 선택&lt;/li&gt;
&lt;li&gt;세 번째(2번), 네 번째(3번) 폰켓몬을 선택&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이때, 첫 번째(3번) 폰켓몬과 네 번째(3번) 폰켓몬을 선택하는 방법은 한 종류(3번 폰켓몬 두 마리)의 폰켓몬만 가질 수 있지만, 다른 방법들은 모두 두 종류의 폰켓몬을 가질 수 있습니다. 따라서 위 예시에서 가질 수 있는 폰켓몬 종류 수의 최댓값은 2가 됩니다.&lt;br /&gt;
당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.&lt;/p&gt;

&lt;h5&gt;제한사항&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;nums는 폰켓몬의 종류 번호가 담긴 1차원 배열입니다.&lt;/li&gt;
&lt;li&gt;nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.&lt;/li&gt;
&lt;li&gt;폰켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.&lt;/li&gt;
&lt;li&gt;가장 많은 종류의 폰켓몬을 선택하는 방법이 여러 가지인 경우에도, 선택할 수 있는 폰켓몬 종류 개수의 최댓값 하나만 return 하면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5&gt;입출력 예&lt;/h5&gt;
&lt;table class=&quot;table&quot;&gt;
        &lt;thead&gt;&lt;tr&gt;
&lt;th&gt;nums&lt;/th&gt;
&lt;th&gt;result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
        &lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;[3,1,2,3]&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[3,3,3,2,2,4]&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[3,3,3,2,2,2]&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
      &lt;/table&gt;
&lt;h5&gt;입출력 예 설명&lt;/h5&gt;

&lt;p&gt;입출력 예 #1&lt;br /&gt;
문제의 예시와 같습니다.&lt;/p&gt;

&lt;p&gt;입출력 예 #2&lt;br /&gt;
6마리의 폰켓몬이 있으므로, 3마리의 폰켓몬을 골라야 합니다.&lt;br /&gt;
가장 많은 종류의 폰켓몬을 고르기 위해서는 3번 폰켓몬 한 마리, 2번 폰켓몬 한 마리, 4번 폰켓몬 한 마리를 고르면 되며, 따라서 3을 return 합니다.&lt;/p&gt;

&lt;p&gt;입출력 예 #3&lt;br /&gt;
6마리의 폰켓몬이 있으므로, 3마리의 폰켓몬을 골라야 합니다.&lt;br /&gt;
가장 많은 종류의 폰켓몬을 고르기 위해서는 3번 폰켓몬 한 마리와 2번 폰켓몬 두 마리를 고르거나, 혹은 3번 폰켓몬 두 마리와 2번 폰켓몬 한 마리를 고르면 됩니다. 따라서 최대 고를 수 있는 폰켓몬 종류의 수는 2입니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;단순 코딩 O(N)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/b954c7fddb54276a3395eb98cbe00ea9.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-및-해설&quot;&gt;4. 알고리즘 및 해설&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;총 폰켓몬 종류를 구하는 문제로 가지고 있는 폰켓몬의 N/2 숫자만큼 선택이 가능하다.&lt;/li&gt;
  &lt;li&gt;그 중 나올 수 있는 경우의 수를 구하는 문제이다.&lt;/li&gt;
  &lt;li&gt;문제를 더 간단하게 정리하자면, [3, 1, 2, 3] 총 4마리의 폰켓몬이 있다.
    &lt;ul&gt;
      &lt;li&gt;폰켓몬은 4마리이므로 N/2는 2마리까지 선택이 가능하다.&lt;/li&gt;
      &lt;li&gt;경우의 수는 [3, 1], [3, 2], [3, 3], [1, 2], [1, 3], [2, 3]&lt;/li&gt;
      &lt;li&gt;이 중 중복을 제외한 4가지 [1, 3], [2, 3], [3, 3], [1, 2]&lt;/li&gt;
      &lt;li&gt;서로 다른 2종류의 폰켓몬을 고르는 경우 1가지, 같은 종류의 폰켓몬을 고르는 경우 1가지&lt;/li&gt;
      &lt;li&gt;총 2가지이므로 답은 2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;내가 선택한 방법은 중복을 제거한 반복문이 돌아가는 동안, 한번에 선택할 수 있는 폰켓몬 경우의 수를 세는 것이다.
    &lt;ul&gt;
      &lt;li&gt;반복문이 도는 동안 중복을 제외한 [3, 1, 2], 가질 수 있는 폰켓몬 2마리&lt;/li&gt;
      &lt;li&gt;총 3번의 반복을 하는 동안 가질 수 있는 폰켓몬 종류 번호의 개수보다 크다면 + 1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="코딩테스트" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><category term="프로그래머스" /><category term="Level_1" /><summary type="html">프로그래머스 폰켓몬 풀이</summary></entry><entry><title type="html">움직여라</title><link href="http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%9B%80%EC%A7%81%EC%97%AC%EB%9D%BC/" rel="alternate" type="text/html" title="움직여라" /><published>2022-06-20T00:00:00+09:00</published><updated>2022-06-20T00:00:00+09:00</updated><id>http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%9B%80%EC%A7%81%EC%97%AC%EB%9D%BC</id><content type="html" xml:base="http://localhost:4000/%ED%95%98%EB%A3%A8/%EC%9B%80%EC%A7%81%EC%97%AC%EB%9D%BC/">&lt;h2 id=&quot;따뜻한-햇살-아래-포근한-침대&quot;&gt;따뜻한 햇살 아래 포근한 침대&lt;/h2&gt;

&lt;p&gt;요새 너무 게을러버린 나는 9시에 일어난다. 그리고 오늘 해야할 일을 간략하게 적고 하다가 금방 낮잠에 들고 만다. 따뜻한 햇살이랑 누구도 건들지 않는 평일의 침대는 그 누구도 뿌리치기 힘든 유혹이다. 그런 유혹에 넘어가길 벌써 며칠째이다. 아침을 바꾸고 싶다는 마음에 동기부여영상을 보고 짐퀵이라는 브레인 코치의 말을 들으며 적어봤다.&lt;/p&gt;

&lt;h3 id=&quot;의식을-가지고-아침을-시작해라&quot;&gt;의식을 가지고 아침을 시작해라&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이것을 리추얼(Ritual)이라고 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;리추얼하는 방법을 간단하게 12가지로 적어봤다.&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;꿈을 기억해라
    &lt;ul&gt;
      &lt;li&gt;어떤 사안을 처리하고 통합해서 문제 해결을 한다. 낮시간동안 내가 할 것에 대해 잠재의식을 활용해야한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;침대를 정리해라
    &lt;ul&gt;
      &lt;li&gt;긍정적인 탄력을 만드는 것으로 올바르게 만드는 과학적 탄력이고 확실하게 해낼 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;물과 보충제를 먹어라
    &lt;ul&gt;
      &lt;li&gt;우리는 자는 동안 물을 먹지 않으므로 아침에 물을 먹어야된다. 보충제도 마찬가지로 우리의 몸에 영양분을 넣어줘야 오늘 내가 잘 생활하기 좋은 상태로 만들어야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;호흡해라
    &lt;ul&gt;
      &lt;li&gt;명상해라 하루를 시작할 때 마음을 정돈하는 것도 하나의 좋은 습관중 하나이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;격렬하게 움직여라
    &lt;ul&gt;
      &lt;li&gt;명상으로 뇌를 깨웠다면 몸을 깨워줘야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;콜드 테라피 찬물 샤워
    &lt;ul&gt;
      &lt;li&gt;신경계를 리셋하고 염증에 좋다고 한다. &lt;strong&gt;그냥 아침에 정신차리기에는 이게 직방인 것 같다.&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;차를 마시면서 일기를 써라
    &lt;ul&gt;
      &lt;li&gt;기록하고 일기를 써라 오늘 하루의 원동력이 되어줄거다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;To do list
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;세 가지 업무와 세 가지 개인적인 것을 작성해라&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;우리 모두는 계속 진행중이고 그것을 해야한다.&lt;/li&gt;
      &lt;li&gt;성취하고 싶은 거 나는 이겨낼 것이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;To feel list
    &lt;ul&gt;
      &lt;li&gt;나의 감정을 관리하고 설계하고 하루종일 그것을 느껴라&lt;/li&gt;
      &lt;li&gt;내 감정이 충동적으로 발생하는 것을 원치 않는다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;To be list
    &lt;ul&gt;
      &lt;li&gt;그 날 내가 되고 싶은 것을 적어라&lt;/li&gt;
      &lt;li&gt;선생님이든 학자이든 개발자이든 내가 되고 싶은 모든 것을 적어라 그건 그냥 상투적인 것이 아니라.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;우리는 인간 행동이 아니라 인간 존재이다. 오늘은 무슨 존재가 되고 싶은가&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;독서를 해라
    &lt;ul&gt;
      &lt;li&gt;‘일주일에 책 한권 읽기’와 같은 목표가 생긴다면 시간 계획이 필요하고 해야할 것이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하루를 시작해라
    &lt;ul&gt;
      &lt;li&gt;오늘도 하루라는 금을 쓰러 가보자!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="하루" /><category term="유통기한 하루" /><category term="성장" /><category term="습관" /><summary type="html">아침을 이기면 하루를 이길 수 있다.</summary></entry><entry><title type="html">기계식 키보드란</title><link href="http://localhost:4000/%ED%82%A4%EB%B3%B4%EB%93%9C/%EA%B8%B0%EA%B3%84%EC%8B%9D%ED%82%A4%EB%B3%B4%EB%93%9C%EB%9E%80/" rel="alternate" type="text/html" title="기계식 키보드란" /><published>2022-06-17T00:00:00+09:00</published><updated>2022-06-17T00:00:00+09:00</updated><id>http://localhost:4000/%ED%82%A4%EB%B3%B4%EB%93%9C/%EA%B8%B0%EA%B3%84%EC%8B%9D%ED%82%A4%EB%B3%B4%EB%93%9C%EB%9E%80</id><content type="html" xml:base="http://localhost:4000/%ED%82%A4%EB%B3%B4%EB%93%9C/%EA%B8%B0%EA%B3%84%EC%8B%9D%ED%82%A4%EB%B3%B4%EB%93%9C%EB%9E%80/">&lt;h2 id=&quot;기계식-키보드란&quot;&gt;기계식 키보드란?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75519839/174333187-79df3216-aaeb-4a82-9065-89d81e4c9011.jpg&quot; alt=&quot;IMG_8393&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이 사진은 내 기계식 키보드이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기계식-키보드가-되기-위한-조건&quot;&gt;기계식 키보드가 되기 위한 조건&lt;/h3&gt;

&lt;p&gt;우리가 흔히 말하는 ‘기계식’ 키보드는 3가지 조건을 달성하면 우리가 흔히 아는 기계식이 된다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;축전식이 아닌 것&lt;/li&gt;
  &lt;li&gt;분리되어 있던 금속 접점이 서로 접촉하며 키가 입력되는 방식일 것&lt;/li&gt;
  &lt;li&gt;금속 접점이 분리할 수 있는 스위치 내부에 존재할 것&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;좀 더 쉽게 설명하자면,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;축전량의 변화가 키를 누르는 지를 감지하는 방식 -&amp;gt; 용수철같은 전도체가 축전센서에 신호를 주는 방식이 아닌 것&lt;/li&gt;
  &lt;li&gt;키보드 안에 스위치를 낄 수 있는 자리가 있어서 그것을 접촉시켜 키가 입력되어야 하는 방식&lt;/li&gt;
  &lt;li&gt;스위치 안에 접점부가 있을 것&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75519839/174334588-8316ce01-3b9a-4a16-a203-3f98b4b11572.jpg&quot; alt=&quot;IMG_8447&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위의 사진이 바로 스위치라는 것이다. 해당 스위치를 눌렀을 때 우리가 흔히 말하는 땅을 치면서 접점부를 누르게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;작동-방식으로-조건-간략-설명&quot;&gt;작동 방식으로 조건 간략 설명&lt;/h3&gt;

&lt;p&gt;위의 조건에 나와있는 것을 반대로 돌아가면 정확하게 작동 방식이 이해가 된다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;스위치 내부의 접점부를 누른다. (스위치를 누르면 안에 스템이 내부의 스프링을 누르면서 접점부를 누르게 된다.)&lt;/li&gt;
  &lt;li&gt;접점부를 누름과 동시에 해당 스위치의 금속 접점과 PCB(키보드 메인보드 느낌)의 접점이 신호를 받으면서 해당 키가 눌렸다고 전달한다.&lt;/li&gt;
  &lt;li&gt;이러한 방식은 축전식이 아닌 기계식이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Pc0p70nKb3M&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;위의 영상은 제 개인 유튜브로 간략하게 찍어봤습니다. 위에 나온 스위치를 키보드에 넣었을 때 나오는 소리입니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>You Nicholas</name></author><category term="키보드" /><category term="키보드" /><summary type="html">멤브레인 키보드의 차이</summary></entry><entry><title type="html">노션의 글을 옮기며</title><link href="http://localhost:4000/%EC%9D%BC%EC%83%81/%EB%85%B8%EC%85%98%EC%9D%98-%EA%B8%80%EB%93%A4%EC%9D%84-%EC%98%AE%EA%B8%B0%EB%A9%B0/" rel="alternate" type="text/html" title="노션의 글을 옮기며" /><published>2022-06-16T00:00:00+09:00</published><updated>2022-06-16T00:00:00+09:00</updated><id>http://localhost:4000/%EC%9D%BC%EC%83%81/%EB%85%B8%EC%85%98%EC%9D%98%20%EA%B8%80%EB%93%A4%EC%9D%84%20%EC%98%AE%EA%B8%B0%EB%A9%B0</id><content type="html" xml:base="http://localhost:4000/%EC%9D%BC%EC%83%81/%EB%85%B8%EC%85%98%EC%9D%98-%EA%B8%80%EB%93%A4%EC%9D%84-%EC%98%AE%EA%B8%B0%EB%A9%B0/">&lt;h2 id=&quot;혼자만의-공부-공간-&quot;&gt;혼자만의 공부 공간 📜&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/75519839/174033997-3bfd6402-63fc-45ad-b727-48efa7c97cef.png&quot; alt=&quot;스크린샷 2022-06-16 17 59 45&quot; /&gt;&lt;/p&gt;

&lt;p&gt;혼자 공부하는 공간이라 나만 알아볼 수 있게 정리해놨다. 👀&lt;/p&gt;

&lt;p&gt;위에 보이는 것 이외에도 페이지가 너무 많아서 조만간 더 정리할 생각이다 (아이디어 노트같이 카테고리를 정하기 애매한 것들이 많다 ㅠ)&lt;/p&gt;

&lt;p&gt;나는 처음 코딩을 배울 때 아는 지인으로부터 공부한 걸 기록하는 습관이 중요하다고 배웠다. 중고등학교 시절부터 무언가 배운 것이 있으면 적지 않고 머리로만 암기해서 풀었다. 그나마 교과서에 끄적이는 게 전부였기에 처음에 노션을 접하고 하나하나 적다보니 지금은 일단 적고 보는 편이다.&lt;/p&gt;

&lt;p&gt;그런 나에게 노션은 혁명이였다. 적기도 수월했고 그리고 기록이 버릇으로 남다보니 핸드폰을 들고다니며 생각나는 아이디어가 있으면 일단 적고 본다. 적으니까 기억에 남아서 나중에는 잘 까먹지도 않는다.&lt;/p&gt;

&lt;h2 id=&quot;엄청난-메리트-&quot;&gt;엄청난 메리트 ⁉&lt;/h2&gt;

&lt;p&gt;아무래도 정리를 하다보니 문제를 풀다가 막히는 부분이 있다면 일단 내 노션부터 키고 본다. 예전에 마주했던 문제가 있다면 구글에서 찾고 비슷한 문제다 싶으면 들어가서 또 찾고 비교해야하는 수월을 훨씬 줄일 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;디메리트-&quot;&gt;디메리트 💢&lt;/h2&gt;

&lt;p&gt;문제가 생기면 일단 기록하고 내가 본 적 있는 문제다 싶으면 노션을 켰다. 그래서 장시간 문제를 해결하는 노력을 하지 않게 된다. 디메리트라고 하기가 뭐하긴하지만 유연하게 문제를 해결하기 위해서는 가끔은 고지식하게 하나를 물고 늘어질 필요도 있다. 하지만 요즘 같이 바쁘다 바빠 현대사회에서 시간은 금이기에 ‘어? 이 문제 어디서 본 적 있는데? 이 코드 쓴 적 있는데?’ 하면 일단 내가 쓴거부터 본다.&lt;/p&gt;

&lt;h3 id=&quot;고치는-중이야&quot;&gt;고치는 중이야..&lt;/h3&gt;

&lt;p&gt;첫 면접날에 라이브 코딩을 본 적이 있다고 했다. 궁금하다면 &lt;strong&gt;&lt;a href=&quot;&amp;quot;https://godhin.github.io/%EC%9D%BC%EC%83%81/%EC%B2%AB-%EB%A9%B4%EC%A0%91/&amp;quot;&quot;&gt;처음으로 면접을 보았다&lt;/a&gt;&lt;/strong&gt; 가서 후기를 보길 바란다. 정말 간단한 문제였는데 못 풀었다. 그때 그 경험이 좋았던게 화이트보드를 통한 라이브코딩 그래서 나도 문제 풀때 꼭 옆에 화이트보드를 끼고 일단 머리 굴려서 풀어보고, 그리고 손 굴려서 풀어본다. 그러니까 이상하게 머리에 더 오래 남는 느낌이다. &lt;em&gt;마지막으로 블로그에 글 까지 쓰면 완벽하다.&lt;/em&gt;&lt;/p&gt;</content><author><name>You Nicholas</name></author><category term="일상" /><category term="일상" /><category term="면접" /><category term="라이브코딩" /><summary type="html">바쁜 와중 이루어진 나의 블로그 이사</summary></entry><entry><title type="html">하루라는 금</title><link href="http://localhost:4000/%ED%95%98%EB%A3%A8/%ED%95%98%EB%A3%A8%EC%9D%98-%EC%8B%9C%EC%9E%91/" rel="alternate" type="text/html" title="하루라는 금" /><published>2022-06-16T00:00:00+09:00</published><updated>2022-06-16T00:00:00+09:00</updated><id>http://localhost:4000/%ED%95%98%EB%A3%A8/%ED%95%98%EB%A3%A8%EC%9D%98%20%EC%8B%9C%EC%9E%91</id><content type="html" xml:base="http://localhost:4000/%ED%95%98%EB%A3%A8/%ED%95%98%EB%A3%A8%EC%9D%98-%EC%8B%9C%EC%9E%91/">&lt;h2 id=&quot;돌아보면서&quot;&gt;돌아보면서&lt;/h2&gt;
&lt;p&gt;가끔 그런 생각에 빠져드는 날이 있다. ‘오늘 아무것도 하기 싫다’, ‘내일부터 하지 뭐’라는 생각이 나의 머리를 지배하는 날들
그런 날들이 나에게 계속해서 쌓여만 가던 와중 블로그를 시작하게 되었고, 책을 읽게 되고 거울속의 내 모습을 긴 시간동안 바라보았다.
‘과연 나는 내가 어릴 적 꿈꿔오던 지금 나이의 모습이랑 같은가’ 머릿속에 그런 문장이 지나가고 나는 되돌아보게 되었다.&lt;/p&gt;

&lt;h2 id=&quot;만약에-게임&quot;&gt;만약에 게임&lt;/h2&gt;
&lt;p&gt;만약에 ~~라면?? 만약에 말이야~ 라는 말을 입에 달고 산 적이 있다. 그런 내가 나의 모습을 본 뒤로 나에게 질문하는 만약에 게임이 있다. &lt;em&gt;‘만약에 너한테 내일 사라지는 금을 준다면 어떻게 할래?’&lt;/em&gt; 우리는 하루라는 금과도 같은 시간을 매일 버리고 있는 것 같다. 누군가는 오늘이 마지막날일 수도 있다 누군가는 내일 하루라도 더 살기위해 고통을 참고 살아간다 누군가는 어제를 후회하며 오늘을 산다. 시간은 금과 같다 우리는 매일 금같은 하루라는 시간을 가지게 되는데 이 금을 어떻게 할것인가는 나의 선택에 달린 것 같다.&lt;/p&gt;</content><author><name>You Nicholas</name></author><category term="하루" /><category term="유통기한 하루" /><category term="성장" /><category term="습관" /><summary type="html">만약에 너한테 내일 사라지는 금을 준다면 어떻게 할래?</summary></entry><entry><title type="html">갑작스러운 소나기</title><link href="http://localhost:4000/%EC%9D%BC%EC%83%81/%EA%B0%91%EC%9E%91%EC%8A%A4%EB%9F%AC%EC%9A%B4-%EC%86%8C%EB%82%98%EA%B8%B0/" rel="alternate" type="text/html" title="갑작스러운 소나기" /><published>2022-06-15T00:00:00+09:00</published><updated>2022-06-15T00:00:00+09:00</updated><id>http://localhost:4000/%EC%9D%BC%EC%83%81/%EA%B0%91%EC%9E%91%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%86%8C%EB%82%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/%EC%9D%BC%EC%83%81/%EA%B0%91%EC%9E%91%EC%8A%A4%EB%9F%AC%EC%9A%B4-%EC%86%8C%EB%82%98%EA%B8%B0/">&lt;h2 id=&quot;소나기-️&quot;&gt;소나기 ☔️&lt;/h2&gt;

&lt;video width=&quot;80%&quot; height=&quot;80%&quot; controls=&quot;controls&quot;&gt;
&lt;source src=&quot;https://user-images.githubusercontent.com/75519839/173714474-224d8418-ccd0-4a0e-9c2f-9261f1c77cdf.mp4&quot; /&gt;
&lt;/video&gt;

&lt;ul&gt;
  &lt;li&gt;뭔가 집이 되게 낡아보이는 것 같다. 내가 수도권으로 올라오면서 처음 느낀 점은 집값이 너무 비싸다. 욕심을 내서 쓰리룸에 1억 2천에 운 좋게 들어갔는데 외관은 너무 빈티지하다. 🤣&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;너무-추워&quot;&gt;너무 추워&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;오늘은 이른 아침부터 일어나서 분주하게 하루를 맞이했다. 뜨거운 여름에는 항상 선풍기와 함께 잠을 청하고는 하는데 비로 인해 차가워진 공기와 선풍기가 만나 너무 추워 깨버렸다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;오히려-좋아&quot;&gt;오히려 좋아&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하루가 길어진다는 건 평범한 일상이 반복되는 나에게 왠지 모를 설레임을 가져다주는 것만 같다. 아침에 눈을 뜨고 아이스 아메리카노 한잔과 아몬드 몇 알 입에 넣고 컴퓨터 앞에 앉아있다보면 어느새 점심이 되곤 했다. 오늘은 점심이 늦게 올 것만 같은 하루다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;아직도-생각나는-첫-면접-&quot;&gt;아직도 생각나는 첫 면접 😞&lt;/h2&gt;

&lt;h3 id=&quot;첫-술에-배부르랴&quot;&gt;&lt;strong&gt;‘첫 술에 배부르랴’&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;라는 말이 있다. 맞는 말이다. 시작부터 배가 부르면 앞으로 남은 술과 음식은 먹어보지도 못하게 되는 것이다. 나에게 아직 많은 기회가 남아있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;경험-이라-쓰고-까먹었다라고-읽기&quot;&gt;‘경험’ 이라 쓰고 ‘까먹었다’라고 읽기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;아직도 첫 면접이 생각나고 ‘왜 그때 이런 대답을 하지 못했을까?’ 라는 생각이 뇌리에서 쉽사리 떠나지 않는 것 같다. 그걸 만회하기 위해 그 전보다 더 노력해야한다. 더 부단해야한다. 첫잔이 생각나지 않게끔&lt;/li&gt;
&lt;/ul&gt;</content><author><name>You Nicholas</name></author><category term="일상" /><category term="일상" /><summary type="html">하지만 원래 소나기는 갑작기 오는 비</summary></entry><entry><title type="html">[파이썬][프로그래머스] 신고 결과 받기</title><link href="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%8B%A0%EA%B3%A0-%EA%B2%B0%EA%B3%BC-%EB%B0%9B%EA%B8%B0/" rel="alternate" type="text/html" title="[파이썬][프로그래머스] 신고 결과 받기" /><published>2022-06-14T00:00:00+09:00</published><updated>2022-06-14T00:00:00+09:00</updated><id>http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%8B%A0%EA%B3%A0%20%EA%B2%B0%EA%B3%BC%20%EB%B0%9B%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%8B%A0%EA%B3%A0-%EA%B2%B0%EA%B3%BC-%EB%B0%9B%EA%B8%B0/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;

&lt;h1 id=&quot;level-1-신고-결과-받기---92334&quot;&gt;[level 1] 신고 결과 받기 - 92334&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/92334&quot;&gt;문제 링크&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;성능-요약&quot;&gt;성능 요약&lt;/h3&gt;

&lt;p&gt;메모리: 10.2 MB, 시간: 0.01 ms&lt;/p&gt;

&lt;h3 id=&quot;구분&quot;&gt;구분&lt;/h3&gt;

&lt;p&gt;코딩테스트 연습 &amp;gt; 2022 KAKAO BLIND RECRUITMENT&lt;/p&gt;

&lt;h3 id=&quot;채점결과&quot;&gt;채점결과&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;정확성: 100.0&lt;br /&gt;합계: 100.0 / 100.0&lt;/p&gt;

&lt;h3 id=&quot;문제-설명&quot;&gt;문제 설명&lt;/h3&gt;

&lt;h5&gt;문제 설명&lt;/h5&gt;

&lt;p&gt;신입사원 무지는 게시판 불량 이용자를 신고하고 처리 결과를 메일로 발송하는 시스템을 개발하려 합니다. 무지가 개발하려는 시스템은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;각 유저는 한 번에 한 명의 유저를 신고할 수 있습니다.

&lt;ul&gt;
&lt;li&gt;신고 횟수에 제한은 없습니다. 서로 다른 유저를 계속해서 신고할 수 있습니다.&lt;/li&gt;
&lt;li&gt;한 유저를 여러 번 신고할 수도 있지만, 동일한 유저에 대한 신고 횟수는 1회로 처리됩니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;k번 이상 신고된 유저는 게시판 이용이 정지되며, 해당 유저를 신고한 모든 유저에게 정지 사실을 메일로 발송합니다.

&lt;ul&gt;
&lt;li&gt;유저가 신고한 모든 내용을 취합하여 마지막에 한꺼번에 게시판 이용 정지를 시키면서 정지 메일을 발송합니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다음은 전체 유저 목록이 [&quot;muzi&quot;, &quot;frodo&quot;, &quot;apeach&quot;, &quot;neo&quot;]이고, k = 2(즉, 2번 이상 신고당하면 이용 정지)인 경우의 예시입니다.&lt;/p&gt;
&lt;table class=&quot;table&quot;&gt;
        &lt;thead&gt;&lt;tr&gt;
&lt;th&gt;유저 ID&lt;/th&gt;
&lt;th&gt;유저가 신고한 ID&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
        &lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&quot;muzi&quot;&lt;/td&gt;
&lt;td&gt;&quot;frodo&quot;&lt;/td&gt;
&lt;td&gt;&quot;muzi&quot;가 &quot;frodo&quot;를 신고했습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;apeach&quot;&lt;/td&gt;
&lt;td&gt;&quot;frodo&quot;&lt;/td&gt;
&lt;td&gt;&quot;apeach&quot;가 &quot;frodo&quot;를 신고했습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;frodo&quot;&lt;/td&gt;
&lt;td&gt;&quot;neo&quot;&lt;/td&gt;
&lt;td&gt;&quot;frodo&quot;가 &quot;neo&quot;를 신고했습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;muzi&quot;&lt;/td&gt;
&lt;td&gt;&quot;neo&quot;&lt;/td&gt;
&lt;td&gt;&quot;muzi&quot;가 &quot;neo&quot;를 신고했습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;apeach&quot;&lt;/td&gt;
&lt;td&gt;&quot;muzi&quot;&lt;/td&gt;
&lt;td&gt;&quot;apeach&quot;가 &quot;muzi&quot;를 신고했습니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
      &lt;/table&gt;
&lt;p&gt;각 유저별로 신고당한 횟수는 다음과 같습니다.&lt;/p&gt;
&lt;table class=&quot;table&quot;&gt;
        &lt;thead&gt;&lt;tr&gt;
&lt;th&gt;유저 ID&lt;/th&gt;
&lt;th&gt;신고당한 횟수&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
        &lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&quot;muzi&quot;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;frodo&quot;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;apeach&quot;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;neo&quot;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
      &lt;/table&gt;
&lt;p&gt;위 예시에서는 2번 이상 신고당한 &quot;frodo&quot;와 &quot;neo&quot;의 게시판 이용이 정지됩니다. 이때, 각 유저별로 신고한 아이디와 정지된 아이디를 정리하면 다음과 같습니다.&lt;/p&gt;
&lt;table class=&quot;table&quot;&gt;
        &lt;thead&gt;&lt;tr&gt;
&lt;th&gt;유저 ID&lt;/th&gt;
&lt;th&gt;유저가 신고한 ID&lt;/th&gt;
&lt;th&gt;정지된 ID&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
        &lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&quot;muzi&quot;&lt;/td&gt;
&lt;td&gt;[&quot;frodo&quot;, &quot;neo&quot;]&lt;/td&gt;
&lt;td&gt;[&quot;frodo&quot;, &quot;neo&quot;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;frodo&quot;&lt;/td&gt;
&lt;td&gt;[&quot;neo&quot;]&lt;/td&gt;
&lt;td&gt;[&quot;neo&quot;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;apeach&quot;&lt;/td&gt;
&lt;td&gt;[&quot;muzi&quot;, &quot;frodo&quot;]&lt;/td&gt;
&lt;td&gt;[&quot;frodo&quot;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&quot;neo&quot;&lt;/td&gt;
&lt;td&gt;없음&lt;/td&gt;
&lt;td&gt;없음&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
      &lt;/table&gt;
&lt;p&gt;따라서 &quot;muzi&quot;는 처리 결과 메일을 2회, &quot;frodo&quot;와 &quot;apeach&quot;는 각각 처리 결과 메일을 1회 받게 됩니다.&lt;/p&gt;

&lt;p&gt;이용자의 ID가 담긴 문자열 배열 &lt;code&gt;id_list&lt;/code&gt;, 각 이용자가 신고한 이용자의 ID 정보가 담긴 문자열 배열 &lt;code&gt;report&lt;/code&gt;, 정지 기준이 되는 신고 횟수 &lt;code&gt;k&lt;/code&gt;가 매개변수로 주어질 때, 각 유저별로 처리 결과 메일을 받은 횟수를 배열에 담아 return 하도록 solution 함수를 완성해주세요.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5&gt;제한사항&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;2 ≤ &lt;code&gt;id_list&lt;/code&gt;의 길이 ≤ 1,000

&lt;ul&gt;
&lt;li&gt;1 ≤ &lt;code&gt;id_list&lt;/code&gt;의 원소 길이 ≤ 10&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id_list&lt;/code&gt;의 원소는 이용자의 id를 나타내는 문자열이며 알파벳 소문자로만 이루어져 있습니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id_list&lt;/code&gt;에는 같은 아이디가 중복해서 들어있지 않습니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;1 ≤ &lt;code&gt;report&lt;/code&gt;의 길이 ≤ 200,000

&lt;ul&gt;
&lt;li&gt;3 ≤ &lt;code&gt;report&lt;/code&gt;의 원소 길이 ≤ 21&lt;/li&gt;
&lt;li&gt;&lt;code&gt;report&lt;/code&gt;의 원소는 &quot;이용자id 신고한id&quot;형태의 문자열입니다.&lt;/li&gt;
&lt;li&gt;예를 들어 &quot;muzi frodo&quot;의 경우 &quot;muzi&quot;가 &quot;frodo&quot;를 신고했다는 의미입니다.&lt;/li&gt;
&lt;li&gt;id는 알파벳 소문자로만 이루어져 있습니다.&lt;/li&gt;
&lt;li&gt;이용자id와 신고한id는 공백(스페이스)하나로 구분되어 있습니다.&lt;/li&gt;
&lt;li&gt;자기 자신을 신고하는 경우는 없습니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;1 ≤ &lt;code&gt;k&lt;/code&gt; ≤ 200, &lt;code&gt;k&lt;/code&gt;는 자연수입니다.&lt;/li&gt;
&lt;li&gt;return 하는 배열은 &lt;code&gt;id_list&lt;/code&gt;에 담긴 id 순서대로 각 유저가 받은 결과 메일 수를 담으면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5&gt;입출력 예&lt;/h5&gt;
&lt;table class=&quot;table&quot;&gt;
        &lt;thead&gt;&lt;tr&gt;
&lt;th&gt;id_list&lt;/th&gt;
&lt;th&gt;report&lt;/th&gt;
&lt;th&gt;k&lt;/th&gt;
&lt;th&gt;result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
        &lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[&quot;muzi&quot;, &quot;frodo&quot;, &quot;apeach&quot;, &quot;neo&quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[&quot;muzi frodo&quot;,&quot;apeach frodo&quot;,&quot;frodo neo&quot;,&quot;muzi neo&quot;,&quot;apeach muzi&quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;[2,1,1,0]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[&quot;con&quot;, &quot;ryan&quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[&quot;ryan con&quot;, &quot;ryan con&quot;, &quot;ryan con&quot;, &quot;ryan con&quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;[0,0]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
      &lt;/table&gt;
&lt;hr /&gt;

&lt;h5&gt;입출력 예 설명&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;입출력 예 #1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;문제의 예시와 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;입출력 예 #2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&quot;ryan&quot;이 &quot;con&quot;을 4번 신고했으나, 주어진 조건에 따라 한 유저가 같은 유저를 여러 번 신고한 경우는 신고 횟수 1회로 처리합니다. 따라서 &quot;con&quot;은 1회 신고당했습니다. 3번 이상 신고당한 이용자는 없으며, &quot;con&quot;과 &quot;ryan&quot;은 결과 메일을 받지 않습니다. 따라서 [0, 0]을 return 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5&gt;제한시간 안내&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;정확성 테스트 : 10초&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;브루트포스 O(N^2)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/ffb94cdaafd2d0903c74f9af85b56900.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-및-해설&quot;&gt;4. 알고리즘 및 해설&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;브루트 포스&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;알고리즘 문제의 뜻 그래도 단순하게 “난폭한 힘” 이다. 단순 무식하게 문제를 해결하는 방식으로 반복문을 많이 사용하기 떄문에 사용하기에 편하나 시간복잡도가 높아질 수 있다.&lt;/li&gt;
  &lt;li&gt;해당 문제의 경우 특정 조건이 있다고 판단되지 않아 브루트 포스로 해결하였다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;문제의 요점&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;해당 문제에서 해결해야할 점은 &lt;strong&gt;신고한 사람과 신고당한 사람&lt;/strong&gt;의 횟수를 세는 것이다. 이것이 K라는 특정 값을 넘을 경우에만 결과가 나오게끔 유도하는 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;문제 풀기에 앞서 중복(악의적으로 무지성 신고를 하는 경우)를 제외하고 시작한다.&lt;/li&gt;
  &lt;li&gt;위의 의사코드 작성처럼 신고 명단과 신고당한 사람을 셀 수 있는 dictionary를 만들어준다.&lt;/li&gt;
  &lt;li&gt;2개의 딕셔너리에서 명단에는 신고자와 신고당한 사람을 세주고, 신고당한 횟수 명단에는 숫자를 세준다.&lt;/li&gt;
  &lt;li&gt;마지막으로 특정값을 충족하였을 때 결과값에 출력을 해준다.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="코딩테스트" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><category term="프로그래머스" /><category term="Level_1" /><summary type="html">프로그래머스 신고 결과 받기 풀이</summary></entry><entry><title type="html">탐욕 알고리즘 복습하기</title><link href="http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%83%90%EC%9A%95-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B3%B5%EC%8A%B5%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="탐욕 알고리즘 복습하기" /><published>2022-06-14T00:00:00+09:00</published><updated>2022-06-14T00:00:00+09:00</updated><id>http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%83%90%EC%9A%95%20%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%20%EB%B3%B5%EC%8A%B5%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%83%90%EC%9A%95-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B3%B5%EC%8A%B5%ED%95%98%EA%B8%B0/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;
&lt;p&gt;탐욕 알고리즘으로 가장 대표적인 거스름돈 문제 해결하기
손님에게 거스름돈으로 줄 수 있는 최소한의 동전 개수 구하기&lt;/p&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;탐욕 알고리즘 O(N)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/49700625dfee55b19ad7e456ab3f091b.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-간략-설명&quot;&gt;4. 알고리즘 간략 설명&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;탐욕 알고리즘&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;대게 탐욕 알고리즘 2가지 조건에 의해 잘 작동하게 된다.
    &lt;ul&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;선택 조건 (greedy choice property)
            &lt;ul&gt;
              &lt;li&gt;앞의 선택이 뒤의 선택에 영향을 주지 않음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;최적 조건 (optimal substructure)
            &lt;ul&gt;
              &lt;li&gt;문제의 일부의 해결 방법이 최적의 문제 해결 방법으로 구성되어 있음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;선택 조건 충족
    &lt;ul&gt;
      &lt;li&gt;큰 단위부터 계속하여도 작은 단위가 결과값에 영향을 주지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;최적 조건 충족
    &lt;ul&gt;
      &lt;li&gt;최소한의 동전 개수를 주기 위해서는 큰 단위부터 거슬러줘야함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>You Nicholas</name></author><category term="알고리즘" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><summary type="html">탐욕 알고리즘으로 풀었던 문제 복습해보기</summary></entry><entry><title type="html">DP로 해결하기</title><link href="http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/DP%EB%A1%9C-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="DP로 해결하기" /><published>2022-06-13T00:00:00+09:00</published><updated>2022-06-13T00:00:00+09:00</updated><id>http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/DP%EB%A1%9C%20%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/DP%EB%A1%9C-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;
&lt;p&gt;자신이 속한 열을 제외한 값중 가장 큰 값을 중복으로 더하여 최종 행의 가장 큰 값을 호출하기&lt;/p&gt;

&lt;h2 id=&quot;2-해결방법-시간복잡도&quot;&gt;2. 해결방법 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;DP O(N^2)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/684d11add85d245bc7825d8c535de5b3.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-간략-설명&quot;&gt;4. 알고리즘 간략 설명&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;DP&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;동적 계획법이라고 불리는 문제로 1회용 알고리즘이다. 최소한의 계산방식으로 문제를 해결하기 때문에 시간을 최소화할 수 있지만 문제가 생길 시 브루트포스와 같이 코드 전체를 바꿔야할 수도 있다.&lt;/li&gt;
  &lt;li&gt;반복적으로 계산해야하는 문제이며 답이 같다라는 조건하여 DP로 해결할 수 있다.&lt;/li&gt;
  &lt;li&gt;위의 문제의 경우 반복적으로 문제를 해결해야하기에 DP를 사용했고 따로 변수를 만들지않고 기존의 값에 지속적으로 값을 추가하며 바꾸는 방식으로 메모리 소비를 최소화하였다. (이러한 방식을 &lt;strong&gt;메모이제이션&lt;/strong&gt; 이라고 한다.)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>You Nicholas</name></author><category term="알고리즘" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><summary type="html">예전에 풀었던 땅따먹기 문제를 DP로 다시 해결해보았다.</summary></entry><entry><title type="html">라이브 코딩</title><link href="http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EC%BD%94%EB%94%A9-%ED%9B%84%EA%B8%B0/" rel="alternate" type="text/html" title="라이브 코딩" /><published>2022-06-10T00:00:00+09:00</published><updated>2022-06-10T00:00:00+09:00</updated><id>http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EC%BD%94%EB%94%A9%20%ED%9B%84%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EC%BD%94%EB%94%A9-%ED%9B%84%EA%B8%B0/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;
&lt;p&gt;리스트 길이가 긴 리스트에서 내가 찾아야할 값이 존재하는 위치 찾기&lt;/p&gt;

&lt;h2 id=&quot;2-해결방법-및-시간복잡도&quot;&gt;2. 해결방법 및 시간복잡도&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;브루트포스 O(N)&lt;/li&gt;
  &lt;li&gt;이진탐색 O(logN)&lt;/li&gt;
  &lt;li&gt;index 라이브러리 O(1)&lt;/li&gt;
  &lt;li&gt;bisect 라이브러리 O(logN)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-문제-해결-및-코드&quot;&gt;3. 문제 해결 및 코드&lt;/h2&gt;
&lt;hr /&gt;

&lt;script src=&quot;https://gist.github.com/godhin/bff7447ac082349dabff5a55e4ed047e.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;주석을-참고하면서-이해를-돕습니다&quot;&gt;주석을 참고하면서 이해를 돕습니다.&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-알고리즘-간략-설명&quot;&gt;4. 알고리즘 간략 설명&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;브루트포스&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;알고리즘 문제의 뜻 그래도 단순하게 “난폭한 힘” 이다. 단순 무식하게 문제를 해결하는 방식으로 반복문을 많이 사용하기 떄문에 사용하기에 편하나 시간복잡도가 높아질 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;이진탐색&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;마치 업다운 게임처럼 중앙을 계속 변경하면서 좌우로 찾는 방식이다. 계속해서 문제를 절반으로 줄이기때문에 N/2 -&amp;gt; 1/2 * N/2 -&amp;gt; ,,,&lt;/li&gt;
  &lt;li&gt;결국에는 자료의 갯수 N에 따라 시행횟수가 log2N으로 표기가 되기떄문에 시간 복잡도는 O(logN)이다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>You Nicholas</name></author><category term="알고리즘" /><category term="알고리즘" /><category term="라이브코딩" /><category term="코테" /><summary type="html">리스트 내 특정 값의 위치를 찾기</summary></entry></feed>